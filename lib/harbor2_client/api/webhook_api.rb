=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.22

=end

require 'uri'

module Harbor2Client
  class WebhookApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create project webhook policy.
    # This endpoint create a webhook policy if the project does not have one. 
    # @param project_name_or_id The name or id of the project
    # @param policy Properties \&quot;targets\&quot; and \&quot;event_types\&quot; needed.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @return [nil]
    def create_webhook_policy_of_project(project_name_or_id, policy, opts = {})
      create_webhook_policy_of_project_with_http_info(project_name_or_id, policy, opts)
      nil
    end

    # Create project webhook policy.
    # This endpoint create a webhook policy if the project does not have one. 
    # @param project_name_or_id The name or id of the project
    # @param policy Properties \&quot;targets\&quot; and \&quot;event_types\&quot; needed.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_webhook_policy_of_project_with_http_info(project_name_or_id, policy, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.create_webhook_policy_of_project ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.create_webhook_policy_of_project"
      end
      # verify the required parameter 'policy' is set
      if @api_client.config.client_side_validation && policy.nil?
        fail ArgumentError, "Missing the required parameter 'policy' when calling WebhookApi.create_webhook_policy_of_project"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.create_webhook_policy_of_project, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/policies'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy)
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#create_webhook_policy_of_project\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete webhook policy of a project
    # This endpoint is aimed to delete webhookpolicy of a project. 
    # @param project_name_or_id The name or id of the project
    # @param webhook_policy_id The ID of the webhook policy
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @return [nil]
    def delete_webhook_policy_of_project(project_name_or_id, webhook_policy_id, opts = {})
      delete_webhook_policy_of_project_with_http_info(project_name_or_id, webhook_policy_id, opts)
      nil
    end

    # Delete webhook policy of a project
    # This endpoint is aimed to delete webhookpolicy of a project. 
    # @param project_name_or_id The name or id of the project
    # @param webhook_policy_id The ID of the webhook policy
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_webhook_policy_of_project_with_http_info(project_name_or_id, webhook_policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.delete_webhook_policy_of_project ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.delete_webhook_policy_of_project"
      end
      # verify the required parameter 'webhook_policy_id' is set
      if @api_client.config.client_side_validation && webhook_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_policy_id' when calling WebhookApi.delete_webhook_policy_of_project"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.delete_webhook_policy_of_project, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s).sub('{' + 'webhook_policy_id' + '}', webhook_policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#delete_webhook_policy_of_project\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get supported event types and notify types.
    # Get supportted event types and notify types.
    # @param project_name_or_id The name or id of the project
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @return [SupportedWebhookEventTypes]
    def get_supported_event_types(project_name_or_id, opts = {})
      data, _status_code, _headers = get_supported_event_types_with_http_info(project_name_or_id, opts)
      data
    end

    # Get supported event types and notify types.
    # Get supportted event types and notify types.
    # @param project_name_or_id The name or id of the project
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @return [Array<(SupportedWebhookEventTypes, Fixnum, Hash)>] SupportedWebhookEventTypes data, response status code and response headers
    def get_supported_event_types_with_http_info(project_name_or_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.get_supported_event_types ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.get_supported_event_types"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.get_supported_event_types, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/events'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SupportedWebhookEventTypes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#get_supported_event_types\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get project webhook policy
    # This endpoint returns specified webhook policy of a project. 
    # @param project_name_or_id The name or id of the project
    # @param webhook_policy_id The ID of the webhook policy
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @return [WebhookPolicy]
    def get_webhook_policy_of_project(project_name_or_id, webhook_policy_id, opts = {})
      data, _status_code, _headers = get_webhook_policy_of_project_with_http_info(project_name_or_id, webhook_policy_id, opts)
      data
    end

    # Get project webhook policy
    # This endpoint returns specified webhook policy of a project. 
    # @param project_name_or_id The name or id of the project
    # @param webhook_policy_id The ID of the webhook policy
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @return [Array<(WebhookPolicy, Fixnum, Hash)>] WebhookPolicy data, response status code and response headers
    def get_webhook_policy_of_project_with_http_info(project_name_or_id, webhook_policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.get_webhook_policy_of_project ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.get_webhook_policy_of_project"
      end
      # verify the required parameter 'webhook_policy_id' is set
      if @api_client.config.client_side_validation && webhook_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_policy_id' when calling WebhookApi.get_webhook_policy_of_project"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.get_webhook_policy_of_project, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s).sub('{' + 'webhook_policy_id' + '}', webhook_policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebhookPolicy')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#get_webhook_policy_of_project\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get project webhook policy last trigger info
    # This endpoint returns last trigger information of project webhook policy. 
    # @param project_name_or_id The name or id of the project
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @return [Array<WebhookLastTrigger>]
    def last_trigger(project_name_or_id, opts = {})
      data, _status_code, _headers = last_trigger_with_http_info(project_name_or_id, opts)
      data
    end

    # Get project webhook policy last trigger info
    # This endpoint returns last trigger information of project webhook policy. 
    # @param project_name_or_id The name or id of the project
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @return [Array<(Array<WebhookLastTrigger>, Fixnum, Hash)>] Array<WebhookLastTrigger> data, response status code and response headers
    def last_trigger_with_http_info(project_name_or_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.last_trigger ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.last_trigger"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.last_trigger, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/lasttrigger'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<WebhookLastTrigger>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#last_trigger\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List project webhook policies.
    # This endpoint returns webhook policies of a project. 
    # @param project_name_or_id The name or id of the project
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @option opts [String] :sort Sort the resource list in ascending or descending order. e.g. sort by field1 in ascending orderr and field2 in descending order with \&quot;sort&#x3D;field1,-field2\&quot;
    # @option opts [String] :q Query string to query resources. Supported query patterns are \&quot;exact match(k&#x3D;v)\&quot;, \&quot;fuzzy match(k&#x3D;~v)\&quot;, \&quot;range(k&#x3D;[min~max])\&quot;, \&quot;list with union releationship(k&#x3D;{v1 v2 v3})\&quot; and \&quot;list with intersetion relationship(k&#x3D;(v1 v2 v3))\&quot;. The value of range and list can be string(enclosed by \&quot; or &#39;), integer or time(in format \&quot;2020-04-09 02:36:00\&quot;). All of these query patterns should be put in the query string \&quot;q&#x3D;xxx\&quot; and splitted by \&quot;,\&quot;. e.g. q&#x3D;k1&#x3D;v1,k2&#x3D;~v2,k3&#x3D;[min~max]
    # @option opts [Integer] :page The page number (default to 1)
    # @option opts [Integer] :page_size The size of per page (default to 10)
    # @return [Array<WebhookPolicy>]
    def list_webhook_policies_of_project(project_name_or_id, opts = {})
      data, _status_code, _headers = list_webhook_policies_of_project_with_http_info(project_name_or_id, opts)
      data
    end

    # List project webhook policies.
    # This endpoint returns webhook policies of a project. 
    # @param project_name_or_id The name or id of the project
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @option opts [String] :sort Sort the resource list in ascending or descending order. e.g. sort by field1 in ascending orderr and field2 in descending order with \&quot;sort&#x3D;field1,-field2\&quot;
    # @option opts [String] :q Query string to query resources. Supported query patterns are \&quot;exact match(k&#x3D;v)\&quot;, \&quot;fuzzy match(k&#x3D;~v)\&quot;, \&quot;range(k&#x3D;[min~max])\&quot;, \&quot;list with union releationship(k&#x3D;{v1 v2 v3})\&quot; and \&quot;list with intersetion relationship(k&#x3D;(v1 v2 v3))\&quot;. The value of range and list can be string(enclosed by \&quot; or &#39;), integer or time(in format \&quot;2020-04-09 02:36:00\&quot;). All of these query patterns should be put in the query string \&quot;q&#x3D;xxx\&quot; and splitted by \&quot;,\&quot;. e.g. q&#x3D;k1&#x3D;v1,k2&#x3D;~v2,k3&#x3D;[min~max]
    # @option opts [Integer] :page The page number
    # @option opts [Integer] :page_size The size of per page
    # @return [Array<(Array<WebhookPolicy>, Fixnum, Hash)>] Array<WebhookPolicy> data, response status code and response headers
    def list_webhook_policies_of_project_with_http_info(project_name_or_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.list_webhook_policies_of_project ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.list_webhook_policies_of_project"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.list_webhook_policies_of_project, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling WebhookApi.list_webhook_policies_of_project, must be smaller than or equal to 100.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/policies'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?
      query_params[:'q'] = opts[:'q'] if !opts[:'q'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<WebhookPolicy>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#list_webhook_policies_of_project\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update webhook policy of a project.
    # This endpoint is aimed to update the webhook policy of a project. 
    # @param project_name_or_id The name or id of the project
    # @param webhook_policy_id The ID of the webhook policy
    # @param policy All properties needed except \&quot;id\&quot;, \&quot;project_id\&quot;, \&quot;creation_time\&quot;, \&quot;update_time\&quot;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name. (default to false)
    # @return [nil]
    def update_webhook_policy_of_project(project_name_or_id, webhook_policy_id, policy, opts = {})
      update_webhook_policy_of_project_with_http_info(project_name_or_id, webhook_policy_id, policy, opts)
      nil
    end

    # Update webhook policy of a project.
    # This endpoint is aimed to update the webhook policy of a project. 
    # @param project_name_or_id The name or id of the project
    # @param webhook_policy_id The ID of the webhook policy
    # @param policy All properties needed except \&quot;id\&quot;, \&quot;project_id\&quot;, \&quot;creation_time\&quot;, \&quot;update_time\&quot;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_request_id An unique ID for the request
    # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_webhook_policy_of_project_with_http_info(project_name_or_id, webhook_policy_id, policy, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhookApi.update_webhook_policy_of_project ...'
      end
      # verify the required parameter 'project_name_or_id' is set
      if @api_client.config.client_side_validation && project_name_or_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_name_or_id' when calling WebhookApi.update_webhook_policy_of_project"
      end
      # verify the required parameter 'webhook_policy_id' is set
      if @api_client.config.client_side_validation && webhook_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_policy_id' when calling WebhookApi.update_webhook_policy_of_project"
      end
      # verify the required parameter 'policy' is set
      if @api_client.config.client_side_validation && policy.nil?
        fail ArgumentError, "Missing the required parameter 'policy' when calling WebhookApi.update_webhook_policy_of_project"
      end
      if @api_client.config.client_side_validation && !opts[:'x_request_id'].nil? && opts[:'x_request_id'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"x_request_id"]" when calling WebhookApi.update_webhook_policy_of_project, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}'.sub('{' + 'project_name_or_id' + '}', project_name_or_id.to_s).sub('{' + 'webhook_policy_id' + '}', webhook_policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Request-Id'] = opts[:'x_request_id'] if !opts[:'x_request_id'].nil?
      header_params[:'X-Is-Resource-Name'] = opts[:'x_is_resource_name'] if !opts[:'x_is_resource_name'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy)
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhookApi#update_webhook_policy_of_project\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
