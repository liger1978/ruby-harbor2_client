=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.22

=end

require 'spec_helper'
require 'json'

# Unit tests for Harbor2Client::ProjectMetadataApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProjectMetadataApi' do
  before do
    # run before each test
    @instance = Harbor2Client::ProjectMetadataApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectMetadataApi' do
    it 'should create an instance of ProjectMetadataApi' do
      expect(@instance).to be_instance_of(Harbor2Client::ProjectMetadataApi)
    end
  end

  # unit tests for add_project_metadatas
  # Add metadata for the specific project
  # Add metadata for the specific project
  # @param project_name_or_id The name or id of the project
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
  # @option opts [Object] :metadata 
  # @return [nil]
  describe 'add_project_metadatas test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project_metadata
  # Delete the specific metadata for the specific project
  # Delete the specific metadata for the specific project
  # @param project_name_or_id The name or id of the project
  # @param meta_name The name of metadata.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
  # @return [nil]
  describe 'delete_project_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_metadata
  # Get the specific metadata of the specific project
  # Get the specific metadata of the specific project
  # @param project_name_or_id The name or id of the project
  # @param meta_name The name of metadata.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
  # @return [Hash<String, String>]
  describe 'get_project_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_project_metadatas
  # Get the metadata of the specific project
  # Get the metadata of the specific project
  # @param project_name_or_id The name or id of the project
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
  # @return [Hash<String, String>]
  describe 'list_project_metadatas test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project_metadata
  # Update the specific metadata for the specific project
  # Update the specific metadata for the specific project
  # @param project_name_or_id The name or id of the project
  # @param meta_name The name of metadata.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [BOOLEAN] :x_is_resource_name The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.
  # @option opts [Object] :metadata 
  # @return [nil]
  describe 'update_project_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
