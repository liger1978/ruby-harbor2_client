=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.22

=end

require 'spec_helper'
require 'json'

# Unit tests for Harbor2Client::ReplicationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReplicationApi' do
  before do
    # run before each test
    @instance = Harbor2Client::ReplicationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReplicationApi' do
    it 'should create an instance of ReplicationApi' do
      expect(@instance).to be_instance_of(Harbor2Client::ReplicationApi)
    end
  end

  # unit tests for create_replication_policy
  # Create a replication policy
  # Create a replication policy
  # @param policy The replication policy
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'create_replication_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_replication_policy
  # Delete the specific replication policy
  # Delete the specific replication policy
  # @param id Replication policy ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'delete_replication_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_replication_execution
  # Get the specific replication execution
  # Get the replication execution specified by ID
  # @param id The ID of the execution.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [ReplicationExecution]
  describe 'get_replication_execution test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_replication_log
  # Get the log of the specific replication task
  # Get the log of the specific replication task
  # @param id The ID of the execution that the tasks belongs to.
  # @param task_id The ID of the task.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [String]
  describe 'get_replication_log test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_replication_policy
  # Get the specific replication policy
  # Get the specific replication policy
  # @param id Policy ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [ReplicationPolicy]
  describe 'get_replication_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_replication_executions
  # List replication executions
  # List replication executions
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :sort Sort the resource list in ascending or descending order. e.g. sort by field1 in ascending orderr and field2 in descending order with \&quot;sort&#x3D;field1,-field2\&quot;
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @option opts [Integer] :policy_id The ID of the policy that the executions belong to.
  # @option opts [String] :status The execution status.
  # @option opts [String] :trigger The trigger mode.
  # @return [Array<ReplicationExecution>]
  describe 'list_replication_executions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_replication_policies
  # List replication policies
  # List replication policies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :q Query string to query resources. Supported query patterns are \&quot;exact match(k&#x3D;v)\&quot;, \&quot;fuzzy match(k&#x3D;~v)\&quot;, \&quot;range(k&#x3D;[min~max])\&quot;, \&quot;list with union releationship(k&#x3D;{v1 v2 v3})\&quot; and \&quot;list with intersetion relationship(k&#x3D;(v1 v2 v3))\&quot;. The value of range and list can be string(enclosed by \&quot; or &#39;), integer or time(in format \&quot;2020-04-09 02:36:00\&quot;). All of these query patterns should be put in the query string \&quot;q&#x3D;xxx\&quot; and splitted by \&quot;,\&quot;. e.g. q&#x3D;k1&#x3D;v1,k2&#x3D;~v2,k3&#x3D;[min~max]
  # @option opts [String] :sort Sort the resource list in ascending or descending order. e.g. sort by field1 in ascending orderr and field2 in descending order with \&quot;sort&#x3D;field1,-field2\&quot;
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @option opts [String] :name Deprecated, use \&quot;query\&quot; instead. The policy name.
  # @return [Array<ReplicationPolicy>]
  describe 'list_replication_policies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_replication_tasks
  # List replication tasks for a specific execution
  # List replication tasks for a specific execution
  # @param id The ID of the execution that the tasks belongs to.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :sort Sort the resource list in ascending or descending order. e.g. sort by field1 in ascending orderr and field2 in descending order with \&quot;sort&#x3D;field1,-field2\&quot;
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @option opts [String] :status The task status.
  # @option opts [String] :resource_type The resource type.
  # @return [Array<ReplicationTask>]
  describe 'list_replication_tasks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for start_replication
  # Start one replication execution
  # Start one replication execution according to the policy
  # @param execution The ID of policy that the execution belongs to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'start_replication test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stop_replication
  # Stop the specific replication execution
  # Stop the replication execution specified by ID
  # @param id The ID of the execution.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'stop_replication test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_replication_policy
  # Update the replication policy
  # Update the replication policy
  # @param id The policy ID
  # @param policy The replication policy
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'update_replication_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
