=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.22

=end

require 'spec_helper'
require 'json'

# Unit tests for Harbor2Client::LdapApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LdapApi' do
  before do
    # run before each test
    @instance = Harbor2Client::LdapApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LdapApi' do
    it 'should create an instance of LdapApi' do
      expect(@instance).to be_instance_of(Harbor2Client::LdapApi)
    end
  end

  # unit tests for import_ldap_user
  # Import selected available ldap users.
  # This endpoint adds the selected available ldap users to harbor based on related configuration parameters from the system. System will try to guess the user email address and realname, add to harbor user information. If have errors when import user, will return the list of importing failed uid and the failed reason. 
  # @param uid_list The uid listed for importing. This list will check users validity of ldap service based on configuration from the system.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'import_ldap_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ping_ldap
  # Ping available ldap service.
  # This endpoint ping the available ldap service for test related configuration parameters. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [LdapConf] :ldapconf ldap configuration. support input ldap service configuration. If it is a empty request, will load current configuration from the system.
  # @return [LdapPingResult]
  describe 'ping_ldap test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_ldap_group
  # Search available ldap groups.
  # This endpoint searches the available ldap groups based on related configuration parameters. support to search by groupname or groupdn. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :groupname Ldap group name
  # @option opts [String] :groupdn The LDAP group DN
  # @return [Array<UserGroup>]
  describe 'search_ldap_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_ldap_user
  # Search available ldap users.
  # This endpoint searches the available ldap users based on related configuration parameters. Support searched by input ladp configuration, load configuration from the system and specific filter. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :username Registered user ID
  # @return [Array<LdapUser>]
  describe 'search_ldap_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
