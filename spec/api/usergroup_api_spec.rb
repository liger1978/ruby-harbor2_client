=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.22

=end

require 'spec_helper'
require 'json'

# Unit tests for Harbor2Client::UsergroupApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsergroupApi' do
  before do
    # run before each test
    @instance = Harbor2Client::UsergroupApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsergroupApi' do
    it 'should create an instance of UsergroupApi' do
      expect(@instance).to be_instance_of(Harbor2Client::UsergroupApi)
    end
  end

  # unit tests for create_user_group
  # Create user group
  # Create user group information
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [UserGroup] :usergroup 
  # @return [nil]
  describe 'create_user_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_group
  # Delete user group
  # Delete user group
  # @param group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'delete_user_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_group
  # Get user group information
  # Get user group information
  # @param group_id Group ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [UserGroup]
  describe 'get_user_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_groups
  # Get all user groups information
  # Get all user groups information
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [Array<UserGroup>]
  describe 'list_user_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_group
  # Update group information
  # Update user group information
  # @param group_id Group ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [UserGroup] :usergroup 
  # @return [nil]
  describe 'update_user_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
