=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.22

=end

require 'spec_helper'
require 'json'

# Unit tests for Harbor2Client::ScannerApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ScannerApi' do
  before do
    # run before each test
    @instance = Harbor2Client::ScannerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ScannerApi' do
    it 'should create an instance of ScannerApi' do
      expect(@instance).to be_instance_of(Harbor2Client::ScannerApi)
    end
  end

  # unit tests for create_scanner
  # Create a scanner registration
  # Creats a new scanner registration with the given data. 
  # @param registration A scanner registration to be created.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'create_scanner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_scanner
  # Delete a scanner registration
  # Deletes the specified scanner registration. 
  # @param registration_id The scanner registration identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [ScannerRegistration]
  describe 'delete_scanner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scanner
  # Get a scanner registration details
  # Retruns the details of the specified scanner registration. 
  # @param registration_id The scanner registration identifer.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [ScannerRegistration]
  describe 'get_scanner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scanner_metadata
  # Get the metadata of the specified scanner registration
  # Get the metadata of the specified scanner registration, including the capabilities and customized properties. 
  # @param registration_id The scanner registration identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [ScannerAdapterMetadata]
  describe 'get_scanner_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_scanners
  # List scanner registrations
  # Returns a list of currently configured scanner registrations. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :q Query string to query resources. Supported query patterns are \&quot;exact match(k&#x3D;v)\&quot;, \&quot;fuzzy match(k&#x3D;~v)\&quot;, \&quot;range(k&#x3D;[min~max])\&quot;, \&quot;list with union releationship(k&#x3D;{v1 v2 v3})\&quot; and \&quot;list with intersetion relationship(k&#x3D;(v1 v2 v3))\&quot;. The value of range and list can be string(enclosed by \&quot; or &#39;), integer or time(in format \&quot;2020-04-09 02:36:00\&quot;). All of these query patterns should be put in the query string \&quot;q&#x3D;xxx\&quot; and splitted by \&quot;,\&quot;. e.g. q&#x3D;k1&#x3D;v1,k2&#x3D;~v2,k3&#x3D;[min~max]
  # @option opts [String] :sort Sort the resource list in ascending or descending order. e.g. sort by field1 in ascending orderr and field2 in descending order with \&quot;sort&#x3D;field1,-field2\&quot;
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @return [Array<ScannerRegistration>]
  describe 'list_scanners test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ping_scanner
  # Tests scanner registration settings
  # Pings scanner adapter to test endpoint URL and authorization settings. 
  # @param settings A scanner registration settings to be tested.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'ping_scanner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_scanner_as_default
  # Set system default scanner registration
  # Set the specified scanner registration as the system default one. 
  # @param registration_id The scanner registration identifier.
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'set_scanner_as_default test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_scanner
  # Update a scanner registration
  # Updates the specified scanner registration. 
  # @param registration_id The scanner registration identifier.
  # @param registration A scanner registraiton to be updated.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'update_scanner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
